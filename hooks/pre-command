#!/bin/bash
# shellcheck disable=SC2001
set -euo pipefail

if [[ "${BUILDKITE_PLUGIN_CACHE_DEBUG:-false}" =~ (true|on|1) ]]; then
  set -x
fi

if [ ! ${BUILDKITE_PLUGIN_CACHE_RESTORE:-true} ]; then
  exit 0
fi

if [[ -n "${BUILDKITE_PLUGIN_CACHE_S3_PROFILE:-}" ]]; then
  aws_cli_profile_arg="--profile ${BUILDKITE_PLUGIN_CACHE_S3_PROFILE}"
else
  aws_cli_profile_arg=""
fi

if [[ -n "${BUILDKITE_PLUGIN_CACHE_CACHE_KEY:-}" ]]; then

  cache_key_prefix=$(echo "$BUILDKITE_PLUGIN_CACHE_CACHE_KEY" | sed -e 's/{.*//')
  template_value=$(echo "$BUILDKITE_PLUGIN_CACHE_CACHE_KEY" | sed -e 's/^[^\{{]*[^A-Za-z]*//' -e 's/.}}.*$//' | tr -d \' | tr -d \")

  if [[ $template_value == *"checksum"* ]]; then
    checksum_argument=$(echo "$template_value" | sed -e 's/checksum*//')
    function=${template_value/"checksum"/"sha1sum"}
    result=$($function | tr -d "$checksum_argument")
    cache_key="$cache_key_prefix$result"
  else
    cache_key=$BUILDKITE_PLUGIN_CACHE_CACHE_KEY
  fi

  if [[ -n "${BUILDKITE_PLUGIN_CACHE_RSYNC_STORAGE:-}" ]]; then
    mkdir -p "${BUILDKITE_PLUGIN_CACHE_RSYNC_STORAGE}/${BUILDKITE_ORGANIZATION_SLUG}/${BUILDKITE_PIPELINE_SLUG}/${cache_key}/"
    rsync -a --ignore-missing-args "${BUILDKITE_PLUGIN_CACHE_RSYNC_STORAGE}/${BUILDKITE_ORGANIZATION_SLUG}/${BUILDKITE_PIPELINE_SLUG}/${cache_key}/" .
  elif [[ -n "${BUILDKITE_PLUGIN_CACHE_TARBALL_STORAGE:-}" ]]; then
    mkdir -p "${BUILDKITE_PLUGIN_CACHE_TARBALL_STORAGE}/${BUILDKITE_ORGANIZATION_SLUG}/${BUILDKITE_PIPELINE_SLUG}"
    TAR_FILE="${BUILDKITE_PLUGIN_CACHE_TARBALL_STORAGE}/${BUILDKITE_ORGANIZATION_SLUG}/${BUILDKITE_PIPELINE_SLUG}/${cache_key}.tar"
    if [ -f "$TAR_FILE" ]; then
      tar -xf "${TAR_FILE}" -C .
    fi
  else
    echo ":aws: :amazon-s3: sync ${cache_key}"
    TAR_FILE="${cache_key}.tar"
    bucket="${BUILDKITE_PLUGIN_CACHE_S3_BUCKET_NAME}/${BUILDKITE_ORGANIZATION_SLUG}/${BUILDKITE_PIPELINE_SLUG}"
    aws s3api head-object --bucket "${BUILDKITE_PLUGIN_CACHE_S3_BUCKET_NAME}" --key "${BUILDKITE_ORGANIZATION_SLUG}/${BUILDKITE_PIPELINE_SLUG}/${TAR_FILE}" || not_exist=true
    if ${not_exist:-false}; then
      echo "s3://${bucket}/${TAR_FILE} does not exist"
    else
      aws s3 cp "s3://${bucket}/${TAR_FILE}" . $aws_cli_profile_arg
      tar -xf "${TAR_FILE}" -C .
    fi
  fi

fi
